<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" 
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"      
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans
     	  http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       	  http://www.springframework.org/schema/context 
       	  http://www.springframework.org/schema/context/spring-context-3.2.xsd
      	  http://www.springframework.org/schema/aop
	      http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	      http://www.springframework.org/schema/tx
	      http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		  http://www.springframework.org/schema/jdbc 
		  http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd 
		  http://www.springframework.org/schema/mvc      
          http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd  
		  ">
		  
	<!-- 扫描包 -->
	<context:component-scan base-package="com.audit.*"/>
	<!-- 统一异常处理 -->
	<bean id="exceptionHandler" class="com.audit.filter.exception.ExceptionHandler"/>
	
	<!-- 视图解析器:定义跳转的文件的前后缀 -->    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">    
        <property name="prefix" value="/WEB-INF/jsp/" />    
        <property name="suffix" value=".jsp" />  <!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  -->  
    </bean>    
	
	<!--处理 @ResponseBody 中文乱码问题-->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>
								text/html;charset=UTF-8
							</value>
						</list>
					</property>
				</bean>
				<!-- 启动JSON格式的配置 -->
				<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<!-- 解决 HttpMediaTypeNotAcceptableException: Could not find acceptable representation -->
					<property name="supportedMediaTypes">
						<list>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	  
	<mvc:annotation-driven/>
	
  	<!--加载配置文件-->
	<bean id="configproperties" 
         class="org.springframework.beans.factory.config.PropertiesFactoryBean">
          <property name="location" value="classpath:/conf/jdbc.properties"/>
    </bean>
    <bean id="propertyConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
         <property name="properties" ref="configproperties"/>
    </bean>
  	
  	<!-- 
	密码不加密数据源:com.alibaba.druid.pool.DruidDataSource
	密码加密数据源:com.hotent.core.db.CustomDruidDataSource
	 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	      <!-- 基本属性 url、user、password -->
	      <property name="url" value="${jdbc.url}" />
	      <property name="username" value="${jdbc.username}" />
	      <property name="password" value="${jdbc.password}" />
	
	      <!-- 配置初始化大小、最小、最大 -->
	      <property name="initialSize" value="${db.minimumConnectionCount}" />
	      <property name="minIdle" value="${db.minimumConnectionCount}" /> 
	      <property name="maxActive" value="${db.maximumConnectionCount}" />
	
	      <!-- 配置获取连接等待超时的时间 -->
	      <property name="maxWait" value="60000" />
	
	      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	      <property name="timeBetweenEvictionRunsMillis" value="60000" />
	
	      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	      <property name="minEvictableIdleTimeMillis" value="300000" />
	
	      <!--<property name="validationQuery" value="select * from ACT_GE_PROPERTY" />
	      <property name="testWhileIdle" value="true" />
	      <property name="testOnBorrow" value="false" />
	      <property name="testOnReturn" value="false" />
	
	      --><!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	      <property name="poolPreparedStatements" value="true" />
	      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	
	      <!-- 配置监控统计拦截的filters -->
	      <property name="filters" value="stat" /> 
	      <!-- 连接泄漏监测 -->
	      <property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->
		  <property name="removeAbandonedTimeout" value="28800" /> <!-- 28800秒，也就是8小时，一个连接超过8小时会自动删除这个连接 -->
		  <property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
		  
	  </bean>
 	
   <!-- 此处会自动调用 MapperScannerConfigurer -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-configuration.xml" />
        <property name="plugins">  
        	<bean class="com.audit.modules.common.mybatis.MybatisSpringPageInterceptor">  
        	</bean>  
   	 	</property>  
    </bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
    
    <!--  扫描 xml配置文件及Dao接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--basePackage指定要扫描的包，在此包之下的映射器都会被 搜索到。可指定多个包，包与包之间用逗号或分号分隔com.abc.mapper -->
		<property name="basePackage" value="com.audit.modules.*.dao" />
	</bean>

    <!-- 事务管理器 -->  
    <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>

	<!-- 开启事务注解驱动 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 支持上传文件 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
    
    <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
    <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/**start**"/>
			<mvc:mapping path="/**/**audit**"/>
			<mvc:mapping path="/**/**create**"/>
			<mvc:mapping path="/**/**update**"/>
			<mvc:mapping path="/**/**delete**"/>
			<!-- 需排除拦截的地址 -->
			<mvc:exclude-mapping path="/" />
			<mvc:exclude-mapping path="/test" />
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
			<bean class="com.audit.filter.interceptor.OperationLogInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
    
    <import resource="spring-activiti.xml"/>
    
</beans>